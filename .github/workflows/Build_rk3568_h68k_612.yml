name: Build_rk3568_h68k_612

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
  schedule:
    - cron: 01 20 * * 5

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_rk3568_h68k_612:
    runs-on: ubuntu-24.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev g++ file clang
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
        sudo timedatectl set-timezone "Asia/Shanghai"
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        cp -f ../diy/lean/lean1.sh ./
        chmod +x ./lean1.sh && ./lean1.sh

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a

        ./scripts/feeds install -a

        cp -f ../diy/lean/lean2.sh ./        
        chmod +x ./lean2.sh && ./lean2.sh    
        
        ## 强制默认rockchip编译内核为6.12  
        sed -i "s/KERNEL_PATCHVER:=*.*/KERNEL_PATCHVER:=6.12/g" target/linux/rockchip/Makefile
        sed -i "s/KERNEL_PATCHVER=*.*/KERNEL_PATCHVER=6.12/g" target/linux/rockchip/Makefile           

        sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='AE86Wrt-H68K-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
       
              
    - name: Configuration Customization - Build_rk3568_h68k_612
      env:
        CONFIG_FILE: './configs/ARM/rk3568/h68k_612.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        make -j$(nproc) V=s
        
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./ARM_Out
        mkdir -p ./ARM_Out/
        cp -a ./openwrt/.config ./ARM_Out/h68k_612.config
        
        getmd5()
        {
        md5sum=`md5sum $1`
        md5=`echo ${md5sum% *}`
        md5=`echo ${md5:0:10}`
        }
        
        rom=openwrt/bin/targets/rockchip/armv8/openwrt-*-squashfs-sysupgrade.img.gz
        getmd5 $rom
                
        cp -a $rom ./ARM_Out/AE86Wrt-H68K-6.12-2305-$(date +%Y%m%d)_${md5}.img.gz
               
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: H68K-OpenWrt_612
        path: ARM_Out/*.img.gz 

    - name: Upload config
      uses: actions/upload-artifact@main
      with:
        name: H68K-612-config
        path: ARM_Out/h68k_612.config
 
    - name: Upload Packages
      uses: actions/upload-artifact@main
      with:
        name: H68K-Packages
        path: openwrt/bin/packages 


    - name: Generate Tag & Release Name
      id: generate_name
      run: |
        time=$(date +%Y%m%d%H%M%S)
        release_tag="$time"
        release_name="H68K-6.12内核-2305-$(date +%Y%m%d)"
        echo "release_name=$release_name" >> $GITHUB_OUTPUT
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT       

    - name: Create Release & Upload
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: ARM_Out/*.img.gz
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}

        
   
